{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","Enums/FilterBy.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","selectedTodo","handleFilteringGoods","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","selectOption","setSelectOption","filterValue","setFilterValue","value","onChange","event","target","placeholder","trim","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","Loader","TodoModal","useState","userInfo","setUserInfo","userLoading","setUserLoading","useEffect","userId","catch","error","Error","code","finally","href","email","name","App","todos","setTodos","todosLoading","setTodosLoading","useMemo","selectedTodos","filter","toLowerCase","includes","ACTIVE","COMPLETED","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e67a170.chunk.js","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void\n  handleFilteringGoods: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({\n  selectedTodo,\n  handleFilteringGoods,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {handleFilteringGoods.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : <td className=\"is-vcentered\" />}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodo !== null\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  selectOption: string\n  setSelectOption: (v: string) => void,\n  filterValue: string,\n  setFilterValue: (v: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectOption,\n  setSelectOption,\n  filterValue,\n  setFilterValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectOption}\n            onChange={(event) => setSelectOption(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={filterValue}\n          onChange={(event) => setFilterValue(event.target.value)}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterValue.trim() && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => setFilterValue('')}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport const getActiveTodos = () => {\n  return get<Todo[]>('/todos')\n    .then(todos => todos.filter(todo => !todo.completed));\n};\n\nexport const getComplitedTodos = () => {\n  return get<Todo[]>('/todos')\n    .then(todos => todos.filter(todo => todo.completed));\n};\n","export enum FilterBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n  const [userLoading, setUserLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId as number)\n      .then(setUserInfo)\n      .catch((error) => {\n        throw new Error(error.code);\n      })\n      .finally(() => setUserLoading(false));\n  }, [userInfo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUserInfo(null);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${userInfo?.email}`}>\n                {userInfo?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './app.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { FilterBy } from './Enums/FilterBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosLoading, setTodosLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [selectOption, setSelectOption] = useState('all');\n  const [filterValue, setFilterValue] = useState('');\n\n  useEffect(() => {\n    setTodosLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch((error) => {\n        throw new Error(error.code);\n      })\n      .finally(() => setTodosLoading(false));\n  }, []);\n\n  const handleFilteringGoods = useMemo(() => {\n    let selectedTodos: Todo[] = [...todos];\n\n    if (filterValue.trim()) {\n      selectedTodos = selectedTodos\n        .filter(todo => todo.title.toLowerCase().includes(filterValue.toLowerCase()));\n    }\n\n    switch (selectOption) {\n      case FilterBy.ACTIVE:\n        return selectedTodos.filter(todo => !todo.completed);\n      case FilterBy.COMPLETED:\n        return selectedTodos.filter(todo => todo.completed);\n      default:\n        return selectedTodos;\n    }\n  }, [selectOption, filterValue, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectOption={selectOption}\n                setSelectOption={setSelectOption}\n                filterValue={filterValue}\n                setFilterValue={setFilterValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                    handleFilteringGoods={handleFilteringGoods}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo !== null && (\n        <TodoModal\n          setSelectedTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}